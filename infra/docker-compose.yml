# .github/workflows/build-and-deploy.yml
name: build-and-deploy

on:
  push:
    branches: [ main ]
    tags:     [ "v*" ]

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.image }}
      tags:  ${{ steps.meta.outputs.tags }}
      version_tag: ${{ steps.pick.outputs.version_tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/oter-server
          tags: |
            type=ref,event=tag
            type=sha,format=short,prefix=sha-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Pick deploy tag
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "version_tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "version_tag=sha-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          fi

      - uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: image=moby/buildkit:latest

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref_type == 'branch' || github.ref_type == 'tag' }}
    steps:
      - uses: actions/checkout@v4

      - name: Verify deployment assets
        shell: bash
        run: |
          set -euo pipefail
          pwd
          ls -la
          ls -la infra
          test -f infra/docker-compose.yml
          test -f infra/nginx.conf
          test -f infra/deploy.sh

      - name: Upload deployment assets
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            infra/docker-compose.yml
            infra/nginx.conf
            infra/deploy.sh
          target: ~/oter

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.0
        env:
          IMAGE_TAG: ${{ needs.build.outputs.version_tag }}
          IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/oter-server
          GHCR_READ_USER: ${{ secrets.GHCR_READ_USER }}
          GHCR_READ_TOKEN: ${{ secrets.GHCR_READ_TOKEN }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          envs: IMAGE_TAG,IMAGE_REPO,GHCR_READ_USER,GHCR_READ_TOKEN
          script: |
            set -euxo pipefail
            cd ~/oter
            chmod +x infra/deploy.sh
            ./infra/deploy.sh
