# -------- Upstreams (no variables, no resolver needed) --------
upstream next_app {
    server nextjs:3000 max_fails=3 fail_timeout=10s;
    keepalive 32;
}

upstream oter_api {
    server oter:8080 max_fails=3 fail_timeout=10s;
    keepalive 32;
}

# -------- Optional: default vhost to handle raw IP hits --------
server {
    listen 80 default_server;
    return 444;  # or: return 301 https://estebanruano.com$request_uri;
}

server {
    listen 443 ssl default_server;
    http2 on;    # (silences the "listen ... http2" deprecation warning)
    ssl_certificate     /etc/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/privkey.pem;
    return 444;  # or redirect to your canonical domain
}

# -------- Web: Next.js (estebanruano.com) --------
server {
    listen 443 ssl;
    http2 on;
    server_name estebanruano.com www.estebanruano.com;

    ssl_certificate     /etc/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/privkey.pem;

    # security & timeouts
    add_header Cache-Control "no-store";
    ssl_protocols TLSv1.2 TLSv1.3;
    proxy_connect_timeout 5s;
    proxy_read_timeout    60s;
    proxy_send_timeout    60s;

    # If upstream fails, show a static maintenance page (keeps API unaffected)
    proxy_intercept_errors on;
    error_page 502 503 504 = /maintenance.html;

    # serve the maintenance file
    location = /maintenance.html {
        root /usr/share/nginx/html;  # put a maintenance.html file here
        internal;
    }

    # harden a bit
    location ~* /\.(env|git) { return 404; }
    if ($request_method !~ ^(GET|HEAD|POST)$) { return 405; }

    location / {
        proxy_pass http://next_app;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 1;  # single upstream, so just fail fast to error_page
    }
}

# -------- API: oter (api.estebanruano.com) --------
server {
    listen 443 ssl;
    http2 on;
    server_name api.estebanruano.com www.api.estebanruano.com;

    ssl_certificate     /etc/letsencrypt/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/privkey.pem;

    add_header Cache-Control "no-store";
    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        proxy_pass http://oter_api;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# -------- HTTP to HTTPS redirect for both hostnames --------
server {
    listen 80;
    server_name estebanruano.com www.estebanruano.com api.estebanruano.com www.api.estebanruano.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;  # keep your LE http-01 path
    }

    location / {
        return 301 https://$host$request_uri;
    }
}
