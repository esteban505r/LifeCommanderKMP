[versions]
# Android
agp = "8.6.1"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
app-version-code = "1"
app-version-name = "1.0.0"


# Kotlin
kotlin = "2.1.20"

#Calendar
calendar = "2.6.0-beta02"

# Compose
compose-desktop = "1.8.0"
compose-ui = "1.7.8"
compose-icons = "1.7.5"
compose-compiler = "1.5.14"
compose-hilt-navigation = "1.2.0"
compose-navigation = "2.7.7"
androidx-test-junit = "1.2.1"
compose-runtime = "1.7.0"
compose-multiplatform = "1.8.0"

# AndroidX
androidx-activityCompose = "1.10.1"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.2.1"
androidx-core-ktx = "1.16.0"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.4"
androidx-material = "1.12.0"
androidx-datastore = "1.1.1"

# Material
material = "1.4.0"
material3 = "1.2.1"

# Coil
coil = "3.0.0-rc02"

# Coroutines
kotlinx-coroutines = "1.6.0"

# Hilt
hilt = "2.56.2"

# Moshi
moshi = "1.13.0"

# Retrofit
retrofit = "2.9.0"
retrofit-json = "2.11.0"
okhttp = "5.0.0-alpha.2"
kotlinx-serialization = "1.6.3"

# Room
room = "2.7.1"

# WorkManager
workmanager = "2.9.0"

# Testing
truth = "1.1.3"
mockk = "1.13.8"
turbine = "0.7.0"
mockwebserver = "4.9.3"
runner = "1.4.0"
ui-test-manifest = "1.6.7"
compose-ui-test = "1.7.8"
junit-android-ext = "1.1.3"
navigation-testing = "2.7.7"
test-core-ktx = "1.6.0-alpha06"
junit-ktx = "1.2.0-alpha04"
junit = "4.13.2"

#Server
ktor = "3.1.2"
logback = "1.5.18"
ktor-gson = "2.3.10"
navigation-compose = "2.8.0-alpha10"
lifecycle-viewmodel-compose = "2.8.2"
coil3 = "3.0.4"
coroutines = "1.9.0"
datastore = "1.1.1"
koin = "4.1.0-Beta1"
composenativetray = "0.5.5"
compose-native-notification = "0.2.0"
calendar-multiplatform = "2.6.2"
material-icons = "1.6.7"

[libraries]
# Kotlin
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# AndroidX
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

#Desktop
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
compose-desktop-current-os = { module = "org.jetbrains.compose.desktop:desktop", version.ref = "compose-desktop" }

# Compose
# compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose-compiler" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
compose-material = { module = "androidx.compose.material:material" }
compose-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-icons" }
compose-google-fonts = { module = "androidx.compose.ui:ui-text-google-fonts" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "compose-hilt-navigation" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose-runtime" }


# Material
google-material = { module = "com.google.android.material:material", version.ref = "material" }
material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }

#Calendar
calendar-view = { module = "com.kizitonwose.calendar:view", version.ref = "calendar" }
calendar-compose = { module = "com.kizitonwose.calendar:compose", version.ref = "calendar" }

# Coil
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }

# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# DataStore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }

# Moshi
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-kotlinx-serialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit-json" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# WorkManager
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
work-testing = { module = "androidx.work:work-testing", version.ref = "workmanager" }

# Testing
truth = { module = "com.google.truth:truth", version.ref = "truth" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
test-runner = { module = "androidx.test:runner", version.ref = "runner" }
ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "ui-test-manifest" }
compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-ui-test" }
junit-android-ext = { module = "androidx.test.ext:junit", version.ref = "junit-android-ext" }
navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigation-testing" }
test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "test-core-ktx" }
junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junit-ktx" }
junit = { module = "junit:junit", version.ref = "junit" }

#Desktop

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-gson-jvm = { module = "io.ktor:ktor-serialization-gson-jvm", version.ref = "ktor-gson" }

navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel-compose" }

coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil3" }

datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "material-icons" }

compose-native-tray = { module = "io.github.kdroidfilter:composenativetray", version.ref = "composenativetray" }
compose-native-notification = { module = "io.github.kdroidfilter:compose-native-notification", version.ref = "compose-native-notification" }

calendar-compose-multiplatform = { module = "com.kizitonwose.calendar:compose-multiplatform", version.ref = "calendar-multiplatform" }

#Server
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host-jvm", version.ref = "ktor" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }