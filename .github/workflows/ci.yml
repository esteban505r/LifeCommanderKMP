# .github/workflows/build-and-deploy.yml
name: build-and-deploy
on:
  push:
    branches: [ main ]
    tags: [ "v*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image: ${{ steps.meta.outputs.image }}
      tags:  ${{ steps.meta.outputs.tags }}
      version_tag: ${{ steps.pick.outputs.version_tag }}

    steps:
      - uses: actions/checkout@v4

      # Build metadata (reliable tags for both branches and tags)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/oter-server
          tags: |
            type=ref,event=tag
            type=sha,format=short,prefix=sha-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      # Pick a single version_tag we will deploy with (prefer tag, else sha-xxxx)
      - name: Pick deploy tag
        id: pick
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "version_tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          else
            echo "version_tag=sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: image=moby/buildkit:latest

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          # IMPORTANT: If your Dockerfile is at repo root, keep "Dockerfile".
          # If it's at server/Dockerfile, update this to server/Dockerfile and also update COPY paths inside.
          file: server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Copy compose and config to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            docker-compose.yml
            nginx.conf
            .env.runtime
          target: ~/oter

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            cd ~/oter

            # Login to GHCR (server needs read:packages token)
            echo "${{ secrets.GHCR_READ_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_READ_USER }}" --password-stdin

            # Ensure external network exists
            docker network create edge || true

            # Pull + recreate with the tag from build job
            IMAGE_TAG="${{ needs.build.outputs.version_tag }}" \
            docker compose pull

            IMAGE_TAG="${{ needs.build.outputs.version_tag }}" \
            docker compose up -d

            # Optional house-keeping
            docker image prune -f
